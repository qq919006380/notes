(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{371:function(v,_,e){"use strict";e.r(_);var l=e(4),t=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[v._v("#")]),v._v(" 概念")]),v._v(" "),_("ul",[_("li",[v._v("组件：是angular应用的基本构建快，你可以把组件理解为一段带有业务逻辑和数据的HTML")]),v._v(" "),_("li",[v._v("模块：模块用来将应用中不同的部分组织成一个Angular框架可以理解的单元")]),v._v(" "),_("li",[v._v("路由：")])]),v._v(" "),_("h1",{attrs:{id:"命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[v._v("#")]),v._v(" 命令")]),v._v(" "),_("ul",[_("li",[_("p",[_("code",[v._v("ng new appName")]),v._v("    ————生存新项目")]),v._v(" "),_("ul",[_("li",[v._v("注意：生成项目同时会下载npm依赖，如果失败需要换代理《nrm》")])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("ng serve --open")]),v._v("   ————启动服务器并监听文件变化， --open（或 -o）打开浏览器")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("npm install -g @angular/cli")]),v._v(" ————安装最新版本")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("npm install -g @angular/cli@1.5.2")]),v._v(" ————安装指定版本 1.5.2")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("npm uninstall -g @angular/cli")]),v._v(" ————卸载")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("ng serve --port 4202")]),v._v(" ————以4202端口打开服务")])])]),v._v(" "),_("h1",{attrs:{id:"angular-cli"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#angular-cli"}},[v._v("#")]),v._v(" angular-cli")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("ng -v")]),v._v(" ————查看angular cli版本")]),v._v(" "),_("li",[_("code",[v._v("ng new xxx")]),v._v(" ————新建项目名称为XXX")]),v._v(" "),_("li",[_("code",[v._v("ng generate component xxx")]),v._v(" ————生成组件")]),v._v(" "),_("li",[_("code",[v._v("ng build")]),v._v("  ————打包项目\n"),_("ul",[_("li",[_("code",[v._v("ng build --prod")]),v._v("   ————打包项目并且压缩")]),v._v(" "),_("li",[v._v("注意：在最新版本ng6+ 的cli加上--prod参数就自动AOT了")])])]),v._v(" "),_("li",[v._v("ng test   ————单元测试")])]),v._v(" "),_("h1",{attrs:{id:"类型描述文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型描述文件"}},[v._v("#")]),v._v(" 类型描述文件")]),v._v(" "),_("ul",[_("li",[v._v("目的：让typescript认识jQuery和bootstrap，可以在ts文件中调用")]),v._v(" "),_("li",[v._v("安装本地\n"),_("ul",[_("li",[_("code",[v._v("npm install @types/jquery --save-dev")])]),v._v(" "),_("li",[_("code",[v._v("npm install @types/bootstrap --save-dev")])])])])]),v._v(" "),_("h1",{attrs:{id:"组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[v._v("#")]),v._v(" 组件")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("值绑定"),_("code",[v._v("[src]")]),v._v("、事件绑定"),_("code",[v._v("(click)")]),v._v("、双向绑定"),_("code",[v._v("[()]")])])]),v._v(" "),_("li",[_("p",[v._v("内置结构指令")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("*ngIf、 *ngFor、 ngSwitch")])])])]),v._v(" "),_("li",[_("p",[v._v("内置属性指令")]),v._v(" "),_("ul",[_("li",[v._v("NGClass、NgStyle、NgModel")]),v._v(" "),_("li",[v._v("==注意：NgModel只能用在表单上，一般结合双休绑定[(Ngmodel)]使用==")])])]),v._v(" "),_("li",[_("p",[v._v("管道 过滤作用")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("public currentTime: Date = new Date();")]),v._v("  //将currentTime过滤成指定格式")]),v._v(" "),_("li",[_("code",[v._v(v._s(v._f("date:'yyyy-MM-dd HH:mm:ss'")(v.currentTime)))])])])]),v._v(" "),_("li",[_("p",[v._v("安全导航")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("{{currentRace")]),v._v("?."),_("code",[v._v("name}}")]),v._v(" // 如果currentRace没有name这个值则显示空,不会报错")])])]),v._v(" "),_("li",[_("p",[v._v("组件通讯")]),v._v(" "),_("ul",[_("li",[v._v("父子组件之间交互（@Input/@Output/模板变量/@ViewChild）")]),v._v(" "),_("li",[v._v("非父子组件之间的交互（Service/localStorage）")]),v._v(" "),_("li",[v._v("还可以利用Session、路由参数来进行通讯、请展开自己想象")])])])]),v._v(" "),_("h1",{attrs:{id:"模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[v._v("#")]),v._v(" 模块")]),v._v(" "),_("h1",{attrs:{id:"路由"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[v._v("#")]),v._v(" 路由")]),v._v(" "),_("ul",[_("li",[v._v("routers 路由配置，保存着哪个URL对应展示哪个组件，以及在哪个RouterOutlet中展示组件")]),v._v(" "),_("li",[v._v("RouterOutlet 在HTML中标记路由内容呈现位置的占位符")]),v._v(" "),_("li",[v._v("Router 负责在运行时执行的路由对象，可以通过调用navigate()和navigateByUrl()方法导航一个指定路由")]),v._v(" "),_("li",[v._v("RouterLink 在Html中声明路由导航用的指令")]),v._v(" "),_("li",[v._v("ActivatedRoute 当前激活的路由对象，保存着当前路由的信息，如路由地址，路由参数等。")]),v._v(" "),_("li",[_("h3",{attrs:{id:"传路由参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#传路由参数"}},[v._v("#")]),v._v(" 传路由参数")]),v._v(" "),_("ul",[_("li",[v._v("值绑定[queryParams]='{id:1}'")])])]),v._v(" "),_("li",[_("h3",{attrs:{id:"接路由参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接路由参数"}},[v._v("#")]),v._v(" 接路由参数")]),v._v(" "),_("ul",[_("li",[v._v("ActivatedRoute")])])]),v._v(" "),_("li",[_("h3",{attrs:{id:"重定向路由"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重定向路由"}},[v._v("#")]),v._v(" 重定向路由")]),v._v(" "),_("ul",[_("li",[v._v("主要用途路由后面为空的时候默认为主页")]),v._v(" "),_("li",[v._v("{path:'',redirectTo:'/home',pathMatch:'full'}")])])]),v._v(" "),_("li")]),v._v(" "),_("h1",{attrs:{id:"依赖注入"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入"}},[v._v("#")]),v._v(" 依赖注入")]),v._v(" "),_("ul",[_("li",[v._v("providers————提供者")]),v._v(" "),_("li",[v._v("Servic————服务\n"),_("ul",[_("li",[v._v("Angular 里面的 Service 与后端框架里面的 Service 设计思想是一致的：")]),v._v(" "),_("li",[v._v("Service 应该是无状态的。")]),v._v(" "),_("li",[v._v("Service 应该可以被很多组件复用，不应该和任何组件紧密相关。")]),v._v(" "),_("li",[v._v("多个 Service 可以组合起来，实现更复杂的服务。")]),v._v(" "),_("li",[v._v("如果你希望 Service 是全局单例的，需要把它定义到根模块里面。")])])])]),v._v(" "),_("h3",{attrs:{id:"使用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[v._v("#")]),v._v(" 使用")]),v._v(" "),_("ul",[_("li",[v._v("注入器\n"),_("ul",[_("li",[v._v("constructor(private productService:ProductService){...}\n"),_("ul",[_("li",[v._v("angular中只能用构造器注入服务")])])])])]),v._v(" "),_("li",[v._v("提供器\n"),_("ul",[_("li",[v._v("要注入服务的时候一定要在providers里声明掉")]),v._v(" "),_("li",[v._v("providers:[ProductService]")]),v._v(" "),_("li",[v._v("providers:[{provide: ProductService,useClass:AnotherProductService}]")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);