(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{382:function(t,s,v){"use strict";v.r(s);var a=v(4),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("在前端项目中，ajax请求太多，能不能都用一个文件夹去统一管理呢，然后吧接口当成函数一样调用呢，这样做的好处有")]),t._v(" "),s("ul",[s("li",[t._v("一个地方统一管理所有接口")]),t._v(" "),s("li",[t._v("避免多次重复写一样的接口")]),t._v(" "),s("li",[t._v("可配置请求方式，减少代码量")])]),t._v(" "),s("h2",{attrs:{id:"实现的思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现的思路"}},[t._v("#")]),t._v(" 实现的思路")]),t._v(" "),s("ul",[s("li",[t._v("首先约定后端返回的数据模板格式")]),t._v(" "),s("li",[t._v("然后按每种不同的请求格式去封装不同的函数")]),t._v(" "),s("li",[t._v("将接口管理写在一个数组里面，遍历所有数组生成对应的函数并且挂在在vue.prototype的方法上")]),t._v(" "),s("li",[t._v("具体代码 https://github.com/qq919006380/test/tree/master/src/api")])]),t._v(" "),s("p",[t._v("个人比较喜欢用数组配置，然后遍历这种写法，还有一总就是用对象来封装，然后将对象的方法嵌入到vue.prototype方法上，这种方法可以避免方法名重名问题。")])])}),[],!1,null,null,null);s.default=e.exports}}]);