(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{335:function(t,v,_){"use strict";_.r(v);var s=_(4),a=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"学习方向"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#学习方向"}},[t._v("#")]),t._v(" 学习方向")]),t._v(" "),v("p",[t._v("前端的技术每年都发生变化，最近听到有同学说“学不动了”，其实我觉得当你学习到一个深度的时候会发现很多技术都是相通的，这就是我们说的“万法归一”，看完下面技术归类后再也不用担心前端学习哪个框架，到底用sass还是less，后端用什么语音了。。。")]),t._v(" "),v("h2",{attrs:{id:"关于「如何取舍一些技术」"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关于「如何取舍一些技术」"}},[t._v("#")]),t._v(" 关于「如何取舍一些技术」：")]),t._v(" "),v("p",[t._v("无论使用的是什么技术，往上走必然会走到一个更高的抽象层面，这个时候所有「变化的表象」就 merge 成了「根不变的基础」：")]),t._v(" "),v("ul",[v("li",[t._v("Domain-specific (领域特定) 的有一大堆 spec 规范")]),t._v(" "),v("li",[t._v("TC39 的 ECMAScript、")]),t._v(" "),v("li",[t._v("IEFF 的 HTTP、")]),t._v(" "),v("li",[t._v("W3C/whatwg 的HTML/CSS/WebAPI")]),t._v(" "),v("li",[t._v("框架「特征」的MVC/MVP/MVVM/Flux、数据流、状态管理、广义的「脏检查」、广义的「脏更新」等等）")])]),t._v(" "),v("h2",{attrs:{id:"计算机科学的划分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机科学的划分"}},[t._v("#")]),t._v(" 计算机科学的划分")]),t._v(" "),v("ul",[v("li",[t._v("「编程语言理论」（类型系统、运行时、OOP/FP/FRP 等范式）、")]),t._v(" "),v("li",[t._v("「系统」（比如 GUI 并发、网络 IO 的并行与并发、各种缓存）、")]),t._v(" "),v("li",[t._v("「图形学」（渲染/动画/可视化的实现与性能优化）、")]),t._v(" "),v("li",[t._v("「软件工程」、")]),t._v(" "),v("li",[t._v("「数据库」、")]),t._v(" "),v("li",[t._v("「安全」…… 所谓「条条大路通罗马」，有句话叫「有造轮子的能力和不造轮子的觉悟」，我觉得对很多技术则可以抱着「有学轮子的能力和不学轮子的觉悟」来看待。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);